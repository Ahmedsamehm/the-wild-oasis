import{s as t,e as c,a as d}from"./index-BxtrJGGV.js";const m=async()=>{const{data:e,error:a}=await t.from("Cabins").select("Name,id,image,maxCapacity,regularPrice,discount,description");if(a)throw console.error(a),new a("Cabins could not be loaded");return e},u=async e=>{const a=`${Math.random()}=${e.image.name}`.replaceAll("/",""),r=`${c}/storage/v1/object/public/Cabins/${a}`,{data:o,error:i}=await t.from("Cabins").insert([{...e,image:r}]).select();if(i)throw new Error(i==null?void 0:i.message);const{error:s}=await t.storage.from("Cabins").upload(a,e.image);if(s)throw await t.from("Cabins").delete().eq("id",o.id),console.log("err in uploading img"),new Error("err in uploading img ");return o},f=async e=>{const{data:a,error:r}=await t.from("Cabins").delete().eq("id",e);if(r)throw console.error(r),new r("Cabin could not be Deleted");return a},b=async(e,a)=>{let r=e.image;if(e.image instanceof File){const n=`${Math.random()}-${e.image.name}`.replaceAll("/","");r=`${c}/storage/v1/object/public/Cabins/${n}`;const{error:l}=await t.storage.from("Cabins").upload(n,e.image);if(l)throw new Error("Failed to upload the new cabin image")}const o={...e};e.image instanceof File?o.image=r:delete o.image;const{data:i,error:s}=await t.from("Cabins").update(o).eq("id",a).select().single();if(s)throw new Error(s.message||"Failed to update cabin");return i};function p(){const{data:e,isLoading:a,error:r}=d({queryKey:["cabins"],queryFn:m,staleTime:2e4,cacheTime:3e5,refetchOnWindowFocus:!1,refetchOnMount:!1});return{cabins:e,isLoading:a,error:r}}export{u as A,b as E,f as d,p as u};
